模式映射
在上一章中，我们讨论了在Vim中如何设置按键映射。我们使用了map命令在正常模式下设置按键映射。如果在进入本章节之前，你有尝试使用这一命令来设置按键映射的话，你可能会发现，你设置的按键映射在可视模式下也可以使用。

其实，你可以用nmap,vmap和imap这三个命令，来指定你想按键映射起作用的模式。这几个命令将会告诉Vim，你设置的这个按键映射，具体来讲应该在正常模式、可视模式还是插入模式中起作用。

尝试运行以下命令:

:nmap \ dd

现在，用Vim打开一个文件，找到闪烁的光标，确定你在正常模式下，然后按下\键。VIm将会删除光标所在行的文本，就如同按下dd所执行的操作一样。

接着，让我们进入可视模式，然后同样按下\键。你会发现，什么都没有发生。这是因为你告诉了Vim只有在正常模式下才执行这一按键映射(而\按键在没映射前，什么功能都没有)。

接下来，运行以下命令:

:vmap \ U

让我们进入可视模式，随便选择一些文本，接着按下\键。Vim会把这些文本全部转化为大写字母。

在正常模式和可视模式下多按几次\键，你会发现，现在\键完成的工作在不同的模式下完全不同，而这取决于你现在在可视模式还是正常模式下。

肌肉记忆
根据不同的模式，把同一个按键映射成不同的功能看起来是一个地狱般糟糕的主意。为什么要在按下按键前，停下想想现在处于什么模式?难道这不是和按键映射设计的初衷，亦即省时间相悖么?

然而实践证明，这并不是问题。一旦你习惯了使用Vim，你将不再会想着下一个该输入什么按键。相反，你会想着:"我要删除一行文本"，而不是"我要按下dd键"。你的手指以及大脑会学习你的设置，然后这些按键的输入都会变得下意识进行。

插入模式
现在，我们已经学会了在正常模式和可视模式下设置按键映射。接下来，让我们学习如何设置在插入模式下的按键映射。运行下述命令:

:imap <c-d> dd

你可能会想，这个按键映射能够让你在插入模式按下Ctrl+d时，删除光标所在的一行文本。这样的话，如果我们想删除一行文本，就不用再返回正常模式，操作就变得更加便捷。

尽管去试试吧。你会发现，完全不是这么一回事。当你按下Ctrl+d键时，Vim只会把两个d字符插入光标所在处！这个功能完全没用嘛！

然而，Vim确实在做我们告诉它的事情。我们说:“嗨，Vim，当我在插入模式下按下Ctrl+d键的时候，我希望，你完成在插入模式下，按下d键和d键所完成的事情”。没错，正常来说，当你在插入模式下，按下两次d键，Vim就是在光标所在处插入两个d字符！

因此，为了实现我们真正想做的事情，我们的命令需要写得十分清楚。试试下面的命令:

:imap <c-d> <esc>dd

上面提到的<esc>键，实际上就是告诉Vim，按下Escape(退出)键,这样就能够让Vim退出插入模式。

现在尝试一下Ctrl+d的功能，你会发现，成功了！但是，请注意，你现在在正常模式下。这很正常，因为Ctrl+d我们只实现了退出插入模式，然后删除一行，我们并没有告诉Vim，请它再一次回到插入模式。

现在，运行本章最后一个命令，把这一个功能也实现了:

:imap <c-d> <esc>ddi

最后的i键就是告诉Vim，请回到插入模式。

练习
实现一个按键映射，让你能够在插入模式下，按下Ctrl+u键，把一个单词的全部字母大写化。请记得可视模式下的U键能够把选中的单词大写化。我发现，这个功能在我编写变量名很长的常量如MAX_CONNECTIONS_ALLOWED时，很有用！当我写这种名字时，我只需要把它用小写写出，然后用Ctrl+u大写化，而不是在我写变量名时一直按着shift键。

把这个功能加入到你的~/.vimrc文件中。

实现一个按键映射，让你能够在正常模式下，按下Ctrl+u键，把一个单词的全部字母大写化。这个功能会与上面那个功能有些许不同，因为你不用进入正常模式。但是最后，你需要回到正常模式下。

把这个功能也加入到你的~/.vimrc文件中。
