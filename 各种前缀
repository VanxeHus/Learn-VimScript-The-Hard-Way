各种前缀
前几个章节里，我们已经学会如何设置按键映射，以免我们用别扭的按键用到抓狂，但是，在按键映射这一内容里，你可能还注意到了一些别的问题。

每当我们设置一些常用键的映射，如:nnoremap <space> dd时，我们已经把空格键原本功能覆盖掉了。如果之后我们又需要空格键原本的功能，那该怎么办？

在你日复一日使用Vim的过程中，肯定有着许多你很少甚至完全没有用到的按键。-键、H键、L键、空格键、回车键和返回键(BackSpace)，这些按键的功能，你几乎不需要（当然是在正常模式下）。不过，这些很少甚至从来没有使用的按键，取决于你个人和你的工作，你总可以找到这种类型的按键。

而这些按键，就可以很安全地用于按键映射，但是看起来我们仅仅只有6个这种按键。这么少，Vim怎么敢声称具有几乎无所不能的定制性？

按键序列映射
不同于Emacs，Vim的按键序列映射设置起来十分简单。尝试下面命令:

:nnoremap -d dd
:nnoremap -c ddO

尝试在正常模式下按下-d和-c两个组合键(按地快一点)。第一个组合被映射为dd的功能，也就是删除当前行，而第二个组合则被映射为“清除当前行内容并进入插入模式”。

这意味着，你可以拿一个你不用的键(像是-键)作为“前缀键”，然后在此基础上创建按键映射。这也意味着你需要多打一个按键来激活你的映射，不过，多打一个键很容易就能形成肌肉记忆。

如果你认为这是个好主意的话，那么你是对的，而Vim也支持这种方法。

前缀
Vim把这些激活键称为前缀（Leader）。你可以用以下命令把任何你喜欢的按键设置为前缀。

:let mapleader = "-"

你可以把-键替换为任何你喜欢的键，我个人比较喜欢,键，即使这覆盖了一个蛮有用的功能，但是按起来很方便。

当你打算创建一个新的带前缀的映射时，你可以用<leader>代表“任何我设置的前缀”。尝试命令:

:nnoremap <leader>d dd

现在，在按了你自己定义的前缀键之后再按d键。Vim将会删除当前行。

只是，为什么要浪费精力自定义前缀？直接在设置按键映射时，输入前缀键不就行了么？对此，我给出三个原因。

首先，你并不一定一开始就决定了你要用什么前缀键，也有可能你之后想换用另一个前缀键。因此，在一个地方统一定义，可以便于以后的修改。

第二，当别人阅读你的~/.vimrc文件时，他们看到你写<leader>，能很快反映过来你想表达的意思。如果他们觉得你的映射很方便的话，就可以直接复制你的映射，即使他们定义的前缀键不一定和你的相同。

最后，很多Vim插件都会创建许多带<leader>的映射。如果你已经设置了你自己的前缀键，那么插件就变的更容易上手了。

局部前缀
Vim还有第二个“前缀”属性，叫着“局部前缀”。这种局部前缀定义的映射，只会在Vim打开特定类型的文件时生效，比如Python文件、HTML文件。

我们之后的章节中，会讨论如何为特定的文件类型设置按键映射，但是现在你可以先用下面的命令设置好你的局部前缀键:

:let maplocalleader = "\\"

需要注意的是，这里我们用的是“\\”，而不是"\"，这是因为“\”在Vimscript脚本中，是转移字符。这个知识我们之后也会讨论。

现在，你可以用<localleader>来设置局部映射，并且它的功能与<leader>类似(当然，你要用一个不同于<leader>的按键)。

如果你不喜欢反斜线(\)，就按照你的习惯，随意修改吧。

练习
阅读文档:help mapleader

阅读文档:help maplocalleader

在你的~/.vimrc文件中，设置mapleader和maplocalleader

把你~/.vimrc中的映射修改为带<leader>前缀的映射，以免覆盖掉了原本存在的功能。
