编辑你的Vimrc文件
在我们学习更多关于Vimscript的知识前，让我们学习一种更方便把新内容加入Vimrc文件的方法。

有时候，在你疯狂打代码的时候，你可能会突然意识到某个新的按键映射会使你的编辑更为方便。为了防止把这件事忘了，你应该立马把它加入你的~/.vimrc文件里，但是，纠结的是，你又不想把你此刻集中的精神破坏掉。那这时，你该怎么办呢？

本章的主题就是你希望让Vim编辑文件时变得更更方便。

没错，这不是一句错句，再读一次。

本章的主题就是让你用Vim编辑文件变得更快速、便捷(在你已经进行一部分定制的基础上)。

设置映射
在你的~/.vimrc添加一个新映射，让你可以通过分割同一终端，打开两个不同文件，以便快速修改vimrc文件，然后回到你的编码中。运行下面命令:

:nnoremap <leader>ev :vsplit $MYVIMRC<cr>

我喜欢把这个命令理解为“编辑我的vimrc文件（'e'dit my 'v'imrc file）”。

$MYVIMRC是Vim里的一个特殊变量，它存储你vimrc文件的位置。如果你现在还不怎么理解也没关系，相信我，这个命令能正常工作。

:vsplit竖直分割Vim窗口。如果你更喜欢水平分割窗口的话，你可以用命令:split。

花几分钟思考一下这个命令。它的目的是：“在一个窗口分割打开你的vimrc文件”，为什么有效？为什么映射的每一部分都很重要？

通过这个映射，你能用三个按键打开你的vimrc文件。一旦你用多几次后，就会形成肌肉记忆，不需要多少力气就能完成。

现在，如果在编码的过程中，你想到一个能节省你时间的新映射，就能轻松地加入你的vimrc文件了。

读取映射
但是，即使你往vimrc文件加入了新映射，它也不是立刻就生效，而是要等下一次你打开Vim时，它才生效。这也就意味着你需要一个额外的命令来令新内容生效。

因此，为了解决这个问题，为了让新映射立刻生效，我们需要添加一个新映射:

:nnoremap <leader>sv :source $MYVIMRC<cr>

我喜欢把这个命令理解为“应用我的vimrc文件('s'ource my 'v'imrc file)”

现在，你可以兼顾编码连惯性的同时，轻松地添加一个新的映射:
	使用命令<leader>ev打开文件
	添加映射
	使用命令:wq<cr>(或者ZZ,译者注:不用冒号)保存并关闭文件。
	使用命令<leader>sv使新配置生效。

花费这八个键加上定义映射的时间，比起打断编码的代价要小很多。

练习
把“编辑我的vimrc文件”和“读取我的vimrc文件”命令加入你的~/.vimrc文件

随意编几个映射用来练习上面的命令

阅读文档:help myvimrc
