缩写
Vim有个特性称为“缩写”，这个特性用起来和映射很相似，但是它更倾向在插入模式、替换模式和命令模式下使用。这个特性功能强大且灵活，但是我们将只会涉及这个特性常用的命令。

在本书中，我们只讲述“缩写”在插入模式下的用法，其他模式的用法可以以此类推。运行下述命令:

:iabbrev adn and

现在，进入插入模式后，输入:

One adn two.

在你打完adn并按下空格键的同时，Vim就把它替换为了and。

像这样纠正输入错误是“缩写”一个很有用的用途。运行下述命令:

:iabbrev waht what
:iabbrev tehn then

现在，进入插入模式后，输入:

Well, I don't know waht we should do tehn.

值得注意的是，我们定义的缩写，只要有出现，都会被替代掉，即使是在第二个缩写“tehn”后接的不是空格键。

关键字字符集
那Vim会在什么时候替代掉你输入的缩写呢？当输入的缩写后接的第一个字符不属于关键字字符集时，Vim就会自动执行这个缩写对应的命令。而“不属于关键字字符集”则是指任何不在iskeyword属性里的字符。下述命令可以用于设置iskeyword属性:

:set iskeyword?

你可以看到，窗口底下显示的是类似"iskeyword=@,48-57,_,192-255"的文本。这种格式非常复杂，但实质上，这段格式代表了下述意思:
	把这些字符看作关键字符:
	    所有英文字母，包括这些字母的大小写形式以及重音形式。
	    所有ASCII值在48-57的字符(实质上就是指数字0-9)
	    下划线字符_
	    所有ASCII值在192-255的字符(实质上是一些特殊的扩展ASCII字符)

如果你想详细了解这个属性的定义格式，你可以阅读文档:help isfname，但是我建议你准备一些啤酒，让自己在抓狂的时候能冷静下来。

对于本章内容来说，你仅仅只需要知道这个命令的意思就是，让缩写命令只在我们输入不是字母、不是数字、不是下划线的字符时执行。

缩写的更多应用
除了纠正错别字外，“缩写”还有其他很有用的功能。让我们添加一些有利于日复一日的编辑工作的命令。运行如下命令:

:iabbrev @@ steve@stevelosh.com
:iabbrev ccopy Copyright 2013 Steve Losh, all rights reserved.

你可以随意替换掉我的名字和地址，然后在插入模式下试试吧。

为什么不使用映射？
如果你觉得缩写这个功能，看起来和映射很类似。那么，你是对的。然而，它们实际上是用于两种不同目的的功能。下面用一个例子来解释吧。

运行如下命令:

:inoremap ssig -- <cr>Steve Losh<cr>steve@stevelosh.com

这是一个用于快速输入电子签名的映射。在插入模式下，你可以尝试输入ssig。

运行起来也很正常。但是，这里有一个隐藏的问题。你可以尝试输入以下文本:

Larry Lessig wrote the bokk "Remix".

你会注意到，Vim会把Lessig中的ssig替换为了我们定义的电子签名！映射根本不在乎这个缩写前后的字符，也就是说映射不会在乎前后文语境，只要遇到你定义的映射序列，它就会进行转换。

把这个映射移除，然后用我们刚刚学的缩写。运行如下命令:

:iunmap ssig
:iabbrev ssig --<cr>Steve Losh<cr>steve@stevelosh.com

现在，我们再一次用上面的文本试试。

这一次，Vim会注意缩写前后的字符，只会在我们希望的时候替换它。

练习
往你的~/.vimrc添加一些你常犯的错别字“缩写”。记得用你上一章节中学到的快速编辑Vimrc文件的方法修改！

加入你自己的邮箱、网址和电子签名的“缩写”

想想其他你经常需要输入的文本，也把它们加入进去吧。

