基本映射
如果说要选出Vimscript的一项特性，能够让使用者最大程度地按照自己的意愿对Vim进行定制，那么这项特性非映射莫属。按键映射能让你告诉Vim以下的内容:

当我按下这个按键，我希望你能做这件事情而不是其他你平时做的事。

我们将开始学习如何设置在正常模式下的按键映射。而关于其他模式下按键映射的设置，我们将在下一章节中讨论。

让我们把以下命令输入进vimrc文件，然后运行vim：

:map - x

在正常模式下，把闪烁的光标放在随处一个文本，然后按下-键。我们可以注意到Vim删除了光标所在的一个字符，跟平时你按下了x键Vim所做的一样。

我们现在已经有了一个按键表示“删除光标所在一个字符”的映射，所以现在我们把这个映射变得更加有用。运行下面的命令：

:map - dd

现在把你的光标放在随处一行文本，然后再一次按下-键。这一次Vim删除了一整行的文本，因为这正是dd做的事情。

特殊字符
你可以通过<按键名称>的方式在Vim或Vimscript中表示一个特殊字符。尝试以下命令：

:map <space> viw

把你的光标放在一个单词上，然后按下空格键，Vim将会在可视模式下高亮选择这个单词。

你也可以用映射改变Ctrl和Alt这类按键的作用。尝试以下命令：

:map <c-d> dd

现在按下Ctrl+d键，Vim将会执行dd操作，也就是删除了一行文本。

注释
还记得我们在第一节课里讲的注释吗？按键映射就是其中一处注释不能正常工作的地方。请尝试下面的命令：

:map <space> viw " Select word

如果你这一次再按空格键，你会发现Vim发生了一些很糟糕的事情。但是为什么呢？

当你这一次按下空格键，Vim认为你想完成的行为是viw<空格>"<空格>Select<空格>word。很显然，这并不是我们所期望做的。

另外，如果你仔细研究一下这个映射的作用，你会发现一些奇怪的特性，不如你先花几分钟试试这个映射会发生什么，然后再思考一下原因。

不过，如果你想不出来也没关系，关于这个特性，我们之后不久就会讨论到了。

练习
把-键映射为“删除当前行，然后把它复制到光标所在行的下面”。这个功能可以让你只用一个按键就把当前行与下一行交换了位置。

把这个映射加入到你的~/.vimrc文件里，让你能够在你打开Vim的任何时候都能使用。

试试自己实现如何把_键映射为功能“把当前行与上一行交换位置”。

把这个功能也加入进你的~/.vimrc文件里。

试着思考一下，如果让你把一个按键的映射去掉并恢复这个按键的原本功能，你会怎么做。
